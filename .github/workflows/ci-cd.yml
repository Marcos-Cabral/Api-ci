name: .NET Core CI/CD

on:
  push:
    branches:
      - main 

permissions:
  contents: write

concurrency:
  group: ci-build-main
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configurar .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0'  

    - name: Restaurar dependencias
      run: dotnet restore "Api/Api.csproj" 

    - name: Compilar el proyecto
      run: dotnet build "Api/Api.csproj" --configuration Release --no-restore 

    - name: Restaurar dependencias de tests
      run: dotnet restore "Testing/Testing.csproj"  

    - name: Compilar los tests
      run: dotnet build "Testing/Testing.csproj" --configuration Release --no-restore  

    - name: Ejecutar tests
      run: dotnet test "Testing/Testing.csproj" --no-restore --verbosity minimal

  publish:
    runs-on: ubuntu-latest
    needs: build-and-test  # El trabajo de publicación depende del trabajo de build-and-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configurar .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0'

    - name: Publicar la aplicación
      run: dotnet publish "Api/Api.csproj" -c Release --output ./Publish --self-contained true --runtime linux-x64  

    - name: Agregar archivos generados al repositorio
      run: |
        git config --global user.name 'GitHub Action'
        git config --global user.email 'action@github.com'
        git add ./Publish/*
        git commit -m "Publish del '${{ github.event.head_commit.timestamp }}' " || echo "No hay cambios para confirmar"
        git push origin main  # Reemplaza 'main' con la rama correcta si es necesario
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
